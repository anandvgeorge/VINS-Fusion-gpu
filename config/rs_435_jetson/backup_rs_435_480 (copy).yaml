%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2

imu_topic: "/mavros/imu/data"
image0_topic: "/downscaled_infra1"
image1_topic: "/downscaled_infra2"
# image0_topic: "/downscaled_infra1"
# image1_topic: "/downscaled_infra2"
output_path: "/home/simulator/vins_output"

cam0_calib: "left_480.yaml"
cam1_calib: "right_480.yaml"
image_width: 848
image_height: 480

   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.


body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.0,     0.0,    1.0,     0.10771,
         -1.0,     0.0,    0.0,    0.029757,
          0.0,    -1.0,    0.0,    -0.056013,
         0.0,      0.0,    0.0,         1.0 ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [  0.0,     0.0,     1.0,      0.10729,
            -1.0,    0.0,     0.0,     -0.020241,
            0.0,     -1.0,    0.0,    -0.056233,
            0.0,      0.0,    0.0,          1.0 ]

#Multiple thread support
multiple_thread: 1
use_gpu: 1
use_gpu_acc_flow: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 70            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n:  0.2 ##0.02892856116341619 ## 5.6045408229319062e-02 ##0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n:  0.05  ##0.0018575970917347715 ##4.7391946428274279e-04 ## 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w:  0.002 ##6.8554768601964e-04 ##8.2245319953393062e-04 ##0.001         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w:  0.0005 ##1.1890821804866949e-05 ##7.3795462281439581e-06 ##0.0001      # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.82         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: -0.0006055901927827886 ##-0.0085 ##-0.00425 ##-0.006265                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/simulator/savedfiles/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 



