%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2


imu_topic: "/mavros/imu/data_raw"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/simulator/vins_output"


cam0_calib: "right.yaml"
cam1_calib: "left.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.


body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data:   [-0.0063,  -0.0714,   0.9974,   0.0896,
             1.0000,   0.0023,   0.0065,  -0.0256,
             -0.0028,  0.9974,   0.0714,  -0.0825,
             0,        0,        0,        1.0000]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data:   [-0.0030,  -0.0709,   0.9975,   0.0893,
             1.0000,   0.0022,   0.0032,   0.0248,
             -0.0024,  0.9975,   0.0709,  -0.0826,
             0,        0,        0,        1.0000]


#    data: [  0,  0,  1,  0.0,
#            -1,  0,  0,  -0.0325,
#             0, -1,  0,  0.0125,
#             0,  0,  0,  1    ]


#   data: [  0, -1,  0,  0.1,
#            0,  0, -1,  -0.0325,
#            1,  0,  0,  0.0125,
#            0,  0,  0,  1    ]

       
#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1  #0.0136543819254          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01 # 0.0007300963557         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001 #0.0007510813244         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0001 #0.0000196581585       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.82         # gravity magnitude

# accelerometer_noise_density: 1.3654381681925403e-02 #continous
# accelerometer_random_walk: 7.5108132439346187e-04 
# gyroscope_noise_density: 7.3009635570620620e-04 #continous
# gyroscope_random_walk: 1.9658158452865660e-05

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: -0.005159747671920416           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/simulator/savedfiles/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

